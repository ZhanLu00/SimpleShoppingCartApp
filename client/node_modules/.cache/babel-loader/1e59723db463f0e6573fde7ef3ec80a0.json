{"ast":null,"code":"var _jsxFileName = \"/Users/jan/Documents/GitHub/CSC301-A1-Test/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Navbar from './React-Components/Navbar';\nimport AppContainer from './React-Components/AppContainer';\n\nclass Item {\n  constructor(name, quantity, price, id) {\n    this.name = name;\n    this.quantity = quantity;\n    this.price = price;\n    this.id = id;\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      regionCode: 0,\n      itemInputs: {\n        name: \"\",\n        quantity: 1,\n        price: 9.99\n      },\n      itemList: [],\n      itemId: 0,\n      total: 0\n    };\n    this.onInputChange = this.onInputChange.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.addRandom = this.addRandom.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  onInputChange(name, value) {\n    console.log(\"onInputChange\");\n    const {\n      itemInputs\n    } = { ...this.state\n    };\n    const currentState = itemInputs;\n    currentState[name] = value;\n    this.setState({\n      itemInputs: currentState\n    });\n  }\n\n  changeTotal(amount) {\n    let newTotal = amount + this.state.total;\n    this.setState({\n      total: newTotal\n    });\n  }\n\n  addItem(name, quantity, price) {\n    // add to the array\n    let id = this.state.itemId;\n    const newItem = new Item(name, quantity, price, id);\n    let items = this.state.itemList.push(newItem);\n    id = id + 1;\n    this.setState({\n      itemLists: items\n    });\n    this.setState({\n      itemId: id\n    });\n    this.changeTotal(price);\n    console.log(this.state.itemList);\n  }\n\n  addRandom(addItem) {\n    const liquorType = [\"Whiskey\", \"Brandy\", \"Beer\", \"Gin\", \"Rum\", \"Vodka\", \"Tequila\"];\n    const liquor = Math.floor(Math.random() * liquorType.length);\n    const price = Math.ceil(Math.random() * (liquor + 1) * 10);\n    const quantity = Math.ceil(Math.random() * 10);\n    addItem(liquorType[liquor], quantity, price);\n    alert(quantity + \" bottles of \" + liquorType[liquor] + \" for $\" + price + \" has been added to your cart\");\n    this.changeTotal(price);\n  }\n\n  removeItem(id) {\n    let itemList = this.state.itemList;\n    let price = 0;\n    console.log(itemList);\n\n    for (let i = 0; i < itemList.length; i++) {\n      if (itemList[i].id == id) {\n        //found\n        price = itemList[i].price;\n        itemList.splice(i, 1);\n      }\n    }\n\n    this.setState({\n      itemList: itemList\n    });\n    this.changeTotal(-price);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(AppContainer, {\n      itemInputs: this.state.itemInputs,\n      itemList: this.state.itemList,\n      onInputChange: this.onInputChange,\n      addItem: this.addItem,\n      addRandom: this.addRandom,\n      removeItem: this.removeItem,\n      total: this.state.total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jan/Documents/GitHub/CSC301-A1-Test/src/App.js"],"names":["React","Navbar","AppContainer","Item","constructor","name","quantity","price","id","App","Component","props","state","regionCode","itemInputs","itemList","itemId","total","onInputChange","bind","addItem","addRandom","removeItem","value","console","log","currentState","setState","changeTotal","amount","newTotal","newItem","items","push","itemLists","liquorType","liquor","Math","floor","random","length","ceil","alert","i","splice","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './React-Components/Navbar';\nimport AppContainer from './React-Components/AppContainer';\n\n\nclass Item{\n\tconstructor(name, quantity, price, id){\n\t\tthis.name = name;\n\t\tthis.quantity = quantity;\n\t\tthis.price = price;\n\t\tthis.id = id;\n\t}\n}\n\nclass App extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tregionCode: 0,\n\t\t\titemInputs: {\n\t\t\t\tname: \"\",\n\t\t\t\tquantity: 1,\n\t\t\t\tprice: 9.99,\n\t\t\t},\n\t\t\titemList: [],\n\t\t\titemId:0,\n\t\t\ttotal:0\n\t\t}\n\t\tthis.onInputChange = this.onInputChange.bind(this);\n\t\tthis.addItem = this.addItem.bind(this);\n\t\tthis.addRandom = this.addRandom.bind(this);\n\t\tthis.removeItem = this.removeItem.bind(this);\n\t}\n\t\n\tonInputChange(name, value){\n\t\tconsole.log(\"onInputChange\");\n\t    const { itemInputs } = { ...this.state };\n\t    const currentState = itemInputs;\n\t    currentState[name] = value;\n\t    this.setState({ itemInputs: currentState });\n\t}\n\n\tchangeTotal(amount){\n\t\tlet newTotal = amount + this.state.total;\n\t\tthis.setState({total:newTotal});\n\t}\n\n\taddItem(name, quantity, price){\n\t \t// add to the array\n\t \tlet id = this.state.itemId;\n\t \tconst newItem = new Item(name, quantity, price, id);\n\t \tlet items = this.state.itemList.push(newItem);\n\t \tid = id + 1;\n\t \tthis.setState({itemLists:items});\n\t \tthis.setState({itemId:id});\n\t \tthis.changeTotal(price);\n\t \tconsole.log(this.state.itemList)\n\n\t}\n\n\taddRandom(addItem){\n\t\tconst liquorType = [\"Whiskey\", \"Brandy\", \"Beer\", \"Gin\", \"Rum\", \n\t\t\t\t\t\t\t\"Vodka\", \"Tequila\"]\n\n\t\tconst liquor = Math.floor(Math.random()*liquorType.length);\n\t\tconst price = Math.ceil(Math.random()*(liquor+1)*10);\n\t\tconst quantity = Math.ceil(Math.random()*10);\n\n\t\taddItem(liquorType[liquor], quantity, price);\n\t\talert(quantity + \" bottles of \" + liquorType[liquor] + \" for $\" + price+\n\t\t\t\" has been added to your cart\")\n\t\tthis.changeTotal(price);\n\t}\n\n\tremoveItem(id){\n\t\tlet itemList = this.state.itemList;\n\t\tlet price = 0;\n\t\tconsole.log(itemList)\n\t\tfor (let i=0;i<itemList.length;i++){\n\t\t\tif (itemList[i].id == id){//found\n\t\t\t\tprice = itemList[i].price;\n\t\t\t\titemList.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tthis.setState({itemList:itemList});\n\t\tthis.changeTotal(-price)\n\n\t}\n\n\trender(){\n\t\treturn (\n\t\t    <div className=\"App\">\n\t\t      \t<Navbar/>\n\t\t      \t<AppContainer itemInputs={this.state.itemInputs}\n\t\t      \t\t\t\t  itemList={this.state.itemList}\n\t\t      \t\t\t\t  onInputChange={this.onInputChange}\n\t\t      \t\t\t\t  addItem={this.addItem}\n\t\t      \t\t\t\t  addRandom={this.addRandom}\n\t\t      \t\t\t\t  removeItem={this.removeItem}\n\t\t      \t\t\t\t  total={this.state.total}\n\t\t      \t\t\t\t  />\n\t\t    </div>\n\t\t);\n\t}\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}